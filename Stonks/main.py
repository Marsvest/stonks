import asyncio
from tqdm import tqdm

from model import SimModel

# Инициалиация экземпляра модели и даты с парсера
model = SimModel()
data: list[(float, str)] = [
    (1.2, "Яндекс объявил о запуске нового сервиса для анализа данных на базе искусственного интеллекта, что привело к росту интереса со стороны инвесторов и повышению стоимости акций."),
    (-0.8, "Яндекс подвергся критике за обновление алгоритмов поисковой системы, что вызвало недовольство среди пользователей и снизило котировки акций компании."),
    (1.5, "Яндекс подписал соглашение с ведущей сетью супермаркетов на поставку решений для автоматизации логистики, что сразу же отразилось на росте стоимости акций."),
    (-1.3, "Яндекс столкнулся с проблемами в процессе внедрения беспилотных технологий, вызвав снижение доверия инвесторов и падение акций компании."),
    (0.9, "Яндекс начал тестирование новой функции голосового помощника с расширенными возможностями, что увеличило спрос на акции компании."),
    (-0.7, "На Яндекс подали коллективный иск в связи с нарушением конфиденциальности данных, что привело к негативному влиянию на цену акций."),
    (1.8, "Яндекс объявил о сотрудничестве с международной технологической компанией, что стало катализатором для роста акций."),
    (-1.0, "Снижение темпов роста выручки Яндекса по сравнению с прошлым кварталом привело к падению акций компании."),
    (1.3, "Яндекс инвестирует значительные средства в разработку технологии генеративного искусственного интеллекта, что повысило ожидания инвесторов и стоимость акций."),
    (-0.5, "Яндекс сообщил о возможной задержке запуска нового сервиса, что снизило привлекательность компании в глазах инвесторов."),
    (2.1, "Яндекс объявил о запуске собственного процессора для оптимизации работы своих сервисов, что привело к резкому росту акций."),
    (-1.6, "Регуляторные проверки деятельности Яндекса в сфере персональных данных вызвали падение стоимости акций.")
]



# Асинхронная прослойка
async def add_to_model(price: float, text: str) -> None:
    model.add_embedding(price, text)


# Обучение модели
def train() -> None:
    for price, text in tqdm(data):
        asyncio.run(add_to_model(price, text))

    model.save()


if __name__ == "__main__":
    # train()
    print(model.predict("Ожидается, что Яндекс представит новую версию поискового алгоритма с улучшенной точностью, что может вызвать рост акций."))